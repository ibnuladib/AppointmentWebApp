@using Microsoft.AspNetCore.Identity
@model ApplicationUser
@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = "Details";
    var doctorId = Model.Id; // Doctor's ID if you're viewing a doctor profile
    var patientId = UserManager.GetUserId(User); // Logged-in user's ID
    var loggedInUserRole = User.IsInRole("Admin") ? "Admin" :
                           User.IsInRole("Doctor") ? "Doctor" : "Patient";
    var isViewingDoctor = await UserManager.IsInRoleAsync(Model, "Doctor");
    var isViewingPatient = await UserManager.IsInRoleAsync(Model, "Patient");
}

@if (loggedInUserRole == "Patient" && isViewingDoctor)
{
    <div class="container mt-5">
        <div class="card">
            <div class="row no-gutters">
                <!-- Doctor Details Section -->
                <div class="col-md-9">
                    <div class="card-body">
                        <h5 class="card-title">Doctor Details</h5>
                        <dl class="row">
                            <dt class="col-sm-3">ID</dt>
                            <dd class="col-sm-9">@doctorId</dd>

                            <dt class="col-sm-3">Username</dt>
                            <dd class="col-sm-9">@Model.UserName</dd>

                            <dt class="col-sm-3">Email</dt>
                            <dd class="col-sm-9">@Model.Email</dd>

                            <dt class="col-sm-3">Name</dt>
                            <dd class="col-sm-9">@Model.FirstName @Model.LastName</dd>

                            <dt class="col-sm-3">Specialization</dt>
                            <dd class="col-sm-9">@Model.Specialization</dd>

                            <dt class="col-sm-3">Qualification</dt>
                            <dd class="col-sm-9">@Model.Qualification</dd>

                            <dt class="col-sm-3">Consultation Fees per hour</dt>
                            <dd class="col-sm-9">@Model.ConsultationFeesPerHour</dd>

                            <dt class="col-sm-3">Medical License</dt>
                            <dd class="col-sm-9">@Model.MedicalLicenseNumber</dd>

                            <dt class="col-sm-3">Average Rating</dt>
                            <dd class="col-sm-9">@Model.AverageRating</dd>

                            <dt class="col-sm-3">Patients served</dt>
                            <dd class="col-sm-9">@Model.TotalAppointments</dd>

                            <dt class="col-sm-3">Years of Experience</dt>
                            <dd class="col-sm-9">@Model.YearsOfExperience</dd>
                        </dl>
                    </div>
                </div>

                <!-- Profile Picture Section -->
                <div class="col-md-3">
                    <div class="profile-picture-container-2 float-right text-center p-3 mt-4">
                        @if (!string.IsNullOrEmpty(Model.ProfilePicturePath))
                        {
                            <img src="@Model.ProfilePicturePath" alt="Profile Picture" class="profile-picture-2" />
                        }
                        else
                        {
                            <div class="no-picture-text-2">No profile picture</div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
        <button class="btn btn-primary mt-3 custom-margin-right" id="rateDoctorBtn">Rate Doctor</button>
        <button class="btn btn-primary mt-3 custom-margin-right" onclick="toggleViewComment('@doctorId')">View Comments</button>
         <a asp-controller="Search" asp-action="Index" class="btn btn-primary mt-3 custom-margin-right">Back to List</a>

        <div id="ratingForm" class="mt-4 p-4 border rounded" style="display: none;">
            <h5 class="text-lg font-semibold mb-2">Rate Doctor</h5>
            <div id="starRating" class="flex mb-2">
            </div>
            <input type="text" id="commentInput" class="form-control mb-2" placeholder="Leave a comment">
            <button id="submitRatingBtn" class="btn btn-primary mt-4">Submit</button>
        </div>
    <div id="viewComment" class="mt-4 p-4 border rounded" style="display: none;">
        <h5 class="text-lg font-semibold mb-2">Recent Comments</h5>
        <div id="commentContent"></div>
    </div>

    <div id="messageAlert" class="alert alert-info mt-10" style="display: none;"></div>

}
else if (loggedInUserRole == "Doctor" && isViewingPatient)
{
    // Doctor viewing a patient, show patient details (no rating form)
    <div class="container mt-5">
        <div class="card">
            <div class="card-header">
                Patient Details
            </div>
            <div class="card-body">
                <dl class="row">
                    <dt class="col-sm-3">ID</dt>
                    <dd class="col-sm-9">@Model.Id</dd>

                    <dt class="col-sm-3">Username</dt>
                    <dd class="col-sm-9">@Model.UserName</dd>

                    <dt class="col-sm-3">Email</dt>
                    <dd class="col-sm-9">@Model.Email</dd>

                    <dt class="col-sm-3">Name</dt>
                    <dd class="col-sm-9">@Model.FirstName @Model.LastName</dd>

                    <dt class="col-sm-3">Medical History</dt>
                    <dd class="col-sm-9">@Model.MedicalHistory</dd>

                    <dt class="col-sm-3">Blood Group</dt>
                    <dd class="col-sm-9">@Model.BloodGroup</dd>
                </dl>
            </div>
        </div>
        <a asp-controller="Search" asp-action="Index" class="btn btn-primary mt-3">Back to List</a>
    </div>
}
else if (loggedInUserRole == "Doctor" && isViewingDoctor)
{
    // Doctor viewing another doctor, show doctor details without rating/comments
    <div class="container mt-5">
        <div class="card">
            <div class="card-header">
                Doctor Details
            </div>
            <div class="card-body">
                <dl class="row">
                    <dt class="col-sm-3">ID</dt>
                    <dd class="col-sm-9">@Model.Id</dd>

                    <dt class="col-sm-3">Username</dt>
                    <dd class="col-sm-9">@Model.UserName</dd>

                    <dt class="col-sm-3">Email</dt>
                    <dd class="col-sm-9">@Model.Email</dd>

                    <dt class="col-sm-3">Name</dt>
                    <dd class="col-sm-9">@Model.FirstName @Model.LastName</dd>

                    <dt class="col-sm-3">Specialization</dt>
                    <dd class="col-sm-9">@Model.Specialization</dd>
                </dl>
            </div>
        </div>
        <a asp-controller="Search" asp-action="Index" class="btn btn-primary mt-3">Back to List</a>
    </div>
}
else if (loggedInUserRole == "Admin")
{
    // Admin viewing either doctor or patient details, no rating form
    <div class="container mt-5">
        <div class="card">
            <div class="card-header">
                @(isViewingDoctor ? "Doctor" : "Patient") Details
            </div>
            <div class="card-body">
                <dl class="row">
                    <dt class="col-sm-3">ID</dt>
                    <dd class="col-sm-9">@Model.Id</dd>

                    <dt class="col-sm-3">Username</dt>
                    <dd class="col-sm-9">@Model.UserName</dd>

                    <dt class="col-sm-3">Email</dt>
                    <dd class="col-sm-9">@Model.Email</dd>

                    <dt class="col-sm-3">Name</dt>
                    <dd class="col-sm-9">@Model.FirstName @Model.LastName</dd>

                    @if (isViewingDoctor)
                    {
                        <dt class="col-sm-3">Specialization</dt>
                        <dd class="col-sm-9">@Model.Specialization</dd>
                    }
                    else
                    {
                        <dt class="col-sm-3">Medical History</dt>
                        <dd class="col-sm-9">@Model.MedicalHistory</dd>

                        <dt class="col-sm-3">Blood Group</dt>
                        <dd class="col-sm-9">@Model.BloodGroup</dd>
                    }
                </dl>
            </div>
        </div>
        <a asp-controller="Search" asp-action="Index" class="btn btn-primary mt-3">Back to List</a>
    </div>
}


@* View Comments *@
<script>
    const doctorId = '@doctorId';
    async function toggleViewComment(doctorId) {
        const viewComment = document.getElementById('viewComment');
        const ratingForm = document.getElementById('ratingForm');

        if (viewComment.style.display === 'none') {
            try {
                const response = await fetch(`/Review/GetRecentComments?doctorId=${doctorId}`);
                const htmlContent = await response.text();
                document.getElementById('commentContent').innerHTML = htmlContent;
                viewComment.style.display = 'block';
                ratingForm.style.display = 'none'; // Hide rating form
            } catch (error) {
                console.error('Error loading comments:', error);
                document.getElementById('starRating').innerHTML = '<p>Error loading comments.</p>';
            }
        } else {
            viewComment.style.display = 'none';
        }
    }
</script>

@* Rating System *@
<script>
    const doctorRatingComponent = (() => {
        const doctorId = '@doctorId'; 
        const patientId = '@patientId'; 
        let selectedRating = 0;

        const rateDoctorBtn = document.getElementById('rateDoctorBtn');
        const ratingForm = document.getElementById('ratingForm');
        const starRating = document.getElementById('starRating');
        const commentInput = document.getElementById('commentInput');
        const submitRatingBtn = document.getElementById('submitRatingBtn');
        const messageAlert = document.getElementById('messageAlert');

        function init() {
            createStars();
            attachEventListeners();
        }

        function createStars() {
            for (let i = 1; i <= 5; i += 1) {
                const star = document.createElement('span');
                star.innerHTML = '&#9733;'; 
                star.className = 'star';
                star.style.fontSize = '24px';
                star.style.color = 'gray';
                star.style.cursor = 'pointer';
                star.dataset.value = i;
                starRating.appendChild(star);
            }
        }

        function attachEventListeners() {
            rateDoctorBtn.addEventListener('click', toggleRatingForm);
            viewComment.addEventListener('click', toggleViewComment);
            starRating.addEventListener('click', handleStarClick);
            submitRatingBtn.addEventListener('click', submitRating);
        }

        function toggleRatingForm() {
            const viewComment = document.getElementById('viewComment');
            ratingForm.style.display = ratingForm.style.display === 'none' ? 'block' : 'none';
            rateDoctorBtn.textContent = ratingForm.style.display === 'none' ? 'Rate Doctor' : 'Cancel';
            viewComment.style.display = 'none'; // Hide comment view
        }

        function handleStarClick(event) {
            if (event.target.classList.contains('star')) {
                selectedRating = parseFloat(event.target.dataset.value);
                updateStars();
            }
        }

        function updateStars() {
            starRating.querySelectorAll('.star').forEach(star => {
                star.style.color = parseFloat(star.dataset.value) <= selectedRating ? 'gold' : 'gray';
            });
        }

        function submitRating() {
            if (selectedRating === 0) {
                showMessage('Please select a rating.', 'alert-warning');
                return;
            }

            const review = {
                DoctorId: doctorId,
                PatientId: patientId,
                Rating: selectedRating,
                Comment: commentInput.value
            };

            fetch('/Review/Create', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                },
                body: JSON.stringify(review)
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        showMessage('Thank you for your review!', 'alert-success');
                        windows.location.reload();
                        resetForm();
                    } else {
                        showMessage('Error submitting review: ' + data.message, 'alert-danger');
                    }
                })
                .catch(error => {
                    console.error('Error submitting review:', error);
                    showMessage('Error submitting your review. Please try again.', 'alert-danger');
                });
        }

        function showMessage(message, className) {
            messageAlert.textContent = message;
            messageAlert.className = `alert ${className} mt-2`;
            messageAlert.style.display = 'block';
        }

        function resetForm() {
            selectedRating = 0;
            updateStars();
            commentInput.value = '';
            toggleRatingForm();
        }

        return { init };
    })();

    document.addEventListener('DOMContentLoaded', doctorRatingComponent.init);
</script>

<style>
    .star {
        transition: color 0.2s;
    }

        .star:hover {
            color: gold;
        }

    .custom-margin-right {
        margin-right: 15px; /* Adjust the value as needed */
    }
</style>